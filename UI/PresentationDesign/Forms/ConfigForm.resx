<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAABAQAAABACAAaAQAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAABAAAAAAAAOjo6AJ6engDe0tIAyqKiAHpmZgDu6uoOwsLCDqKKigCurq4A1rq+AFpa
        WgB+fn4A9vb2ANbKyg66uroOioqKAOLOzgBOTk4Atp6eAObe3gDy7u4ArpaWDraurg5qamoAin5+AP7+
        /gDiztIAAAAAAAAAAAAAAAAOAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAADgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAA
        AA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA4AAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAOAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAOAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADgAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAADgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA4AAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAA4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAOAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAADgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAA
        AA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA4AAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAOAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAOAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADgAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAADgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA4AAAAOAAAAAP///////wAAAAD//////////wAA//8ACxUA//8AAP///wARDxER
        FxUJCxERBBER//8REQgTCBMQDQkSBwMEEf///xEXFAUODxcYFQkHEf////8KDwwOBAcDBwQVEgr//woK
        CgYUDxUNEA0VGAkYCgoKFQ0FBRcJExQTCRcNCRIKFxgWEwUPFhQMFBYPGhYYFxcXFwgTDgsWBRYLDgIX
        Fxf//xcLEBMODxcPDgUWF/////8LDQ0aEwUFFAwUBQv///8LFQ0NDxYTBQYBAQYBC///CwsVCwsLDg0L
        CwsLCwv///8LD///DwEWD///Dwv//////////w8PDw/////////8PwAAzDP8P4ABzDOAAYABwAOAAcAD
        wAMAAMADAAAAAAAAAAAAAAAAwAMAAMADwAOAAcADgAGAAcwzgAH8P8wzKAAAABAAAAAgAAAAAQAgAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8A////AP///wD///8A////ADk5OUA5OTn/OTk5/zk5
        Ob////8A////AP///wD///8A////AP///wD///8A////AP///wA9PT2APT09MP///wA9PT1AZF1d/62V
        lf89PT2/////AP///wA9PT2APT09EP///wD///8A////AP///wBCQkKfiYeG/0JCQu9CQkKfamVl/6iZ
        mf/Xu7z/fXBw/0JCQs9CQkKveGdn/0JCQs9CQkIQ////AP///wBHR0cgR0dH766srP/k3t//raen/+bY
        2f/hz8//3MXF/9e7u/+4np//o4qL/8mhov97amr/R0dHcP///wD///8A////AExMTDBsbGz/8e/v/+/o
        6f+1sLD/hICA/2NiYv+Be3v/qZmZ/9Oysv+ljI3/TExMr////wD///8A////AP///wBSUlJgjo2N//T0
        9P+6uLj/eG9v/6SMjP/Jpqf/pIyM/3hubv+pmZn/spqa/1JSUr////8A////AFhYWGBYWFi/WFhY387K
        yv/y7+//iIiI/6eRkv/dw8T/4crL/93Cw/+nkZL/gXt7/9e7vP+KfX3/WFhYv1hYWL9eXl6AoJaX/9XJ
        yv/q4eH/7unp/2RkZP/Wvb7/7d3e//Pp6v/s3d7/1ry9/2NiYv/cxcX/17u8/7adnv9eXl7/Y2NjgIF8
        fP+ypqb/5tjZ/+rh4f+GhIX/sKKi//Pq6v//////8+rq/7Ciov+EgID/4c/Q/7OkpP+AeXn/Y2Nj/2lp
        aSBpaWlAaWlpn6mgoP/m2Nn/tbCw/313eP+4rq7/6uHi/7eurv99d3j/tbCw/93S0f9paWnvaWlpQGlp
        aUD///8A////AG9vbyB9enr/4c/P/+bY2f+1sLD/hoWF/2RkZP+IiIj/uri4/+7o6f+0r6//b29vj///
        /wD///8A////AP///wB0dHSfqZqa/9zFxf/hz9D/5tjY/+rh4f/v6ej/8u/v//T09P/y7+//5uHi/3R0
        dO90dHQw////AP///wB5eXkQeXl5z6OUlf+snJ3/hYOD/7GnqP/m2dj/6uHh/87Kyv+fnp7/kJCQ/8HA
        wP+enJz/eXl5UP///wD///8A////AH5+fhB+fn7Pfn5+n35+fiB+fn6fvLCx/9jOzf9+fn7ffn5+UH5+
        fjB+fn7vfn5+YP///wD///8A////AP///wD///8AgoKCEP///wD///8AgoKCQJmTk/+yqan/goKCv///
        /wD///8AgoKCEP///wD///8A////AP///wD///8A////AP///wD///8A////AIWFhSCFhYWAhYWFgIWF
        hWD///8A////AP///wD///8A////AP///wD8P///5DMAAMAB//+AAf//wAMAAMADAAsAAP//AAD//wAA
        EQ8AABcVwAMREcABEf+AAREIwAMTEOw3Egf8PwRw
</value>
  </data>
</root>